rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 인증 여부 확인 함수
    function isSignedIn() {
      return request.auth != null;
    }
    
    // 요청한 사용자 ID와 문서의 사용자 ID가 일치하는지 확인하는 함수
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // 기본적으로 모든 접근 거부
    match /{document=**} {
      allow read, write: if false;
    }
    
    // 사용자 데이터
    match /users/{userId} {
      // 사용자는 자신의 문서만 읽고 쓸 수 있음
      allow read, write: if isSignedIn() && isOwner(userId);
      
      // 퀴즈 컬렉션
      match /quizzes/{quizId} {
        // 사용자는 자신의 퀴즈만 생성, 수정, 삭제 가능
        allow create: if isSignedIn() && isOwner(userId);
        // 퀴즈 소유자만 읽기 가능하도록 수정
        allow read: if isSignedIn() && isOwner(userId);
        allow update, delete: if isSignedIn() && isOwner(userId);
      }
      
      // 세션 히스토리 컬렉션
      match /sessionHistories/{historyId} {
        // 사용자는 자신의 세션 히스토리만 생성, 읽기, 수정, 삭제 가능
        allow create: if isSignedIn() && isOwner(userId);
        allow read, update, delete: if isSignedIn() && isOwner(userId);
      }
    }
    
    // collectionGroup 쿼리를 위한 규칙 수정
    match /{path=**}/quizzes/{quizId} {
      // 퀴즈 소유자만 읽을 수 있게 변경하고, 세션 참가를 위한 공개 퀴즈 읽기 규칙 추가
      allow read: if isSignedIn() && (
        // 퀴즈가 저장된 경로에서 userId를 추출하여 소유자 확인
        request.auth.uid == resource.data.ownerId || 
        // 세션 참가를 위한 공개 퀴즈인 경우 읽기 허용
        (resource.data.isActive == true && resource.data.isPublic == true)
      );
    }
  }
} 